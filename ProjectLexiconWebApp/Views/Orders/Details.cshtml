@model ProjectLexiconWebApp.Models.Order

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Order: @Model.Id</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Order Date
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderDate)
        </dd>
        <dt class="col-sm-2">
            Total Cost
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TotalCost)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Status.Contains("pending"))
                {
                    <a class="text-warning" asp-action="ChangeStatus" asp-route-id="@Model.Id">@Model.Status</a>
                }
                @if (Model.Status.Contains("sent"))
                {
                    <a class="text-primary" asp-action="ChangeStatus" asp-route-id="@Model.Id">@Model.Status</a>
                }
                @if (Model.Status.Contains("delivered"))
                {
                    <a class="text-success" asp-action="ChangeStatus" asp-route-id="@Model.Id">@Model.Status</a>
                }
        </dd>
        <dt class="col-sm-2">
            Full Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Customer.FullName)
        </dd>
        <dt class="col-sm-2">
            Customer ID
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Customer.Id)
        </dd>
        <dt class="col-sm-2">
            Shipper
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Shipper)
        </dd>
    </dl>
</div>
<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Product</th>
                <th scope="col">Unitary price</th>
                <th scope="col">Quantity</th>
                <th scope="col">Total Price</th>
                <th scope="col">Delete</th>
            </tr>
        </thead>
        <tbody>

            @if (Model.OrderItems.Count != 0)
            {
                @foreach (var orderitem in Model.OrderItems)
                {
                    <tr>
                        <td>@orderitem.Id</td>
                        <td>@orderitem.Product.Name</td>
                        @if(orderitem.Product.DiscountedPrice > 0){ <td>@orderitem.Product.UnitPrice</td> } else{ <td>@orderitem.Product.UnitPrice</td> }
                        <td><form asp-action="Edit" method="post">Quantity: <input type="hidden" name="id" value="@orderitem.Id" /><input type="number" min="0" name= "quantity" value="@orderitem.Quantity" onclick="" /><button class="btn btn-outline-success" type="submit" value="Edit" /></form></td>
                        <td>@orderitem.Price</td>
                        <td><a class="text-danger" asp-action="DeleteOrderItem" asp-route-id="@orderitem.Id">Delete</a></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<div>
    <a class="text-danger" asp-action="DeleteOrder" asp-route-id="@Model?.Id">Delete Order</a> |
    <a asp-action="Index">Back to List</a>
</div>
